{"version":3,"file":"js/about.d3e9d7d3.js","mappings":"sqBA0BA,IAAIA,GAAOC,EAAAA,EAAAA,KAAI,GACf,MAAMC,EAAKC,OAAOC,UAAUC,UAAUC,cACH,mBAAhCJ,EAAGK,MAAM,oBAA4C,0BAA0BC,KAAKJ,UAAUC,YAC/FI,QAAQC,IAAI,+BACZV,EAAKW,OAAQ,GAEbX,EAAKW,OAAQ,EAKf,MAAMC,EAAgBC,GAChBT,UAAUU,cAAcF,aAEnBR,UAAUU,aAAaF,aAAaC,GAClCT,UAAUW,mBAEZX,UAAUW,mBAAmBF,GAC3BT,UAAUY,gBAEZZ,UAAUY,gBAAgBH,GACxBT,UAAUQ,aAEZR,UAAUQ,aAAaC,GAEvB,IAAII,SAAQ,CAACC,EAASC,KAC3BA,EAAO,CAACC,KAAM,MAAOC,QAAS,eAAe,IAO7CC,EAAsBC,IAI1B,SAASC,EAAQC,EAAQC,GACvB,OAAO,IAAIT,SAASC,IAClBQ,EAAMC,UAAYF,EAClBC,EAAME,iBAAmB,WACvBF,EAAMG,OACNX,GACF,CAAC,GAEL,CAGA,OAAON,EAAa,CAClBkB,OAAO,EACPJ,MAAO,CAAEK,WAAY,CAAEC,MAAO,kBAG7BC,MAAKC,GACCV,EAAQU,EAAKX,KACnBY,OAAMC,IACP3B,QAAQ2B,MAAM,cAAeA,EAAMhB,KAAMgB,EAAMf,QAAQ,GAEvD,EAKEgB,EAAaA,KAGjB,MAAMX,EAAQY,SAASC,eAAe,UAC9BC,YAAaC,EAAIC,WAAYC,EAAIC,aAAcC,EAAIC,YAAaC,GAAOrB,EAE/E,MAAO,CACLsB,OAAQC,GACER,EAAKI,EAAMI,EAErBC,OAAQC,GACER,EAAKI,EAAMI,EAEtB,EAKGC,EAAQA,KACZ,MAAM1B,EAAQY,SAASC,eAAe,SAChCc,EAAYf,SAASC,eAAe,WACpCe,EAAUhB,SAASC,eAAe,UAKxC,SAASgB,IACP,MAAM,OAAEP,EAAM,OAAEE,GAAWb,KAErB,KAAEmB,EAAI,IAAEC,EAAG,MAAEN,EAAK,OAAEF,GAAWI,EAAUK,wBAC/CjD,QAAQC,IAAI8C,EAAMC,EAAKN,EAAOF,GAE9B,MAAMU,EAAUL,EAAQM,WAAW,MACnCN,EAAQH,MAAQA,EAChBG,EAAQL,OAASA,EAGjBU,EAAQE,UACJnC,EACAwB,EAAOM,EAAOrD,OAAO2D,SACrBd,EAAOS,EAAMtD,OAAO4D,SACpBb,EAAOC,GACPH,EAAOC,GACP,EACA,EACAE,EACAF,GAIJ,MAAMe,EAASV,EAAQW,UAAU,cACjC,IAAIC,EAAS5B,SAAS6B,cAAc,OACpCD,EAAOE,IAAMJ,EACb1B,SAAS+B,KAAKC,OAAOJ,EAEvB,CAjCAZ,EAAQiB,MAAMC,QAAU,QAGxBjB,GA8BA,EAKIkB,EAAOA,KAEX,MAAMC,EAAMpC,SAAS6B,cAAc,SAEnCO,EAAIC,aAAa,QAASxE,OAAOyE,SAASC,MAE1CvC,SAAS+B,KAAKS,YAAYJ,GAG1BA,EAAIK,SAEJzC,SAAS0C,YAAY,QAErB1C,SAAS+B,KAAKY,YAAYP,GAC1BQ,MAAM,OAAO,E,OAIfC,EAAAA,EAAAA,KAAU,KACR,GAAInF,EAAKW,MAAO,CACd,MAAMe,EAAQY,SAASC,eAAe,SACtCjB,EAAmBI,EACrB,MAEF0D,EAAAA,EAAAA,KAAc,MACZ,SAAUC,EAAKC,GACb,IAAIC,EAAM,KACV,SAASC,IACPD,EAAMD,EAAIG,gBAAgBC,YAC1BJ,EAAIG,gBAAgBlB,MAAMoB,SAAWJ,EAAM,KAAO,IACpD,CACAC,GACD,EAPD,CAOGrF,OAAQmC,SAAS,I,4NC/KtB,MAAMsD,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://kyc-v3/./src/components/photoComponent.vue","webpack://kyc-v3/./src/components/photoComponent.vue?b081"],"sourcesContent":["<template>\r\n  <div>\r\n    <div v-if=\"show\" id=\"video-wrapper\">\r\n      <div id=\"masking\"></div>\r\n      <div id=\"photo\" @click=\"photo\">\r\n        <div></div>\r\n      </div>\r\n      <video\r\n          id=\"video\"\r\n          autoPlay\r\n          muted\r\n          playsInline\r\n          width=\"100%\">\r\n      </video>\r\n    </div>\r\n    <div id=\"notSupport\" v-else>\r\n      <p>非常抱歉，当前浏览器不支持此功能</p>\r\n      <p>请使用系统自带Safari浏览器打开</p>\r\n      <button @click=\"copy\">复制当前链接</button>\r\n    </div>\r\n    <canvas id=\"canvas\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {onBeforeMount, onMounted, ref} from \"vue\";\r\nlet show = ref(false);\r\nconst ua = window.navigator.userAgent.toLowerCase();\r\nif(ua.match(/micromessenger/i) === 'micromessenger' && (/(iPhone|iPad|iPod|iOS)/i.test(navigator.userAgent)) ) {\r\n  console.log('当前是ios 微信内置浏览器， 需要用自带safari')\r\n  show.value = false\r\n} else {\r\n  show.value = true\r\n}\r\n/**\r\n * 访问用户媒体设备的兼容方法\r\n */\r\nconst getUserMedia = (constrains) => {\r\n  if (navigator.mediaDevices?.getUserMedia) {\r\n    //最新标准API\r\n    return navigator.mediaDevices.getUserMedia(constrains);\r\n  } else if (navigator.webkitGetUserMedia) {\r\n    //webkit内核浏览器\r\n    return navigator.webkitGetUserMedia(constrains);\r\n  } else if (navigator.mozGetUserMedia) {\r\n    //Firefox浏览器\r\n    return navigator.mozGetUserMedia(constrains);\r\n  } else if (navigator.getUserMedia) {\r\n    //旧版API\r\n    return navigator.getUserMedia(constrains);\r\n  } else {\r\n    return new Promise((resolve, inject) => {\r\n      inject({name: '该设备', message: '暂时无法提供流媒体功能'})\r\n    })\r\n  }\r\n}\r\n/**\r\n * 该函数需要接受一个video的dom节点作为参数\r\n */\r\nconst getUserMediaStream = (videoNode) => {\r\n  /**\r\n   * 调用api成功的回调函数\r\n   */\r\n  function success(stream, video) {\r\n    return new Promise((resolve) => {\r\n      video.srcObject = stream;\r\n      video.onloadedmetadata = function () {\r\n        video.play();\r\n        resolve();\r\n      };\r\n    });\r\n  }\r\n\r\n  //调用用户媒体设备，访问摄像头\r\n  return getUserMedia({\r\n    audio: false,\r\n    video: { facingMode: { exact: 'environment' } },\r\n    // video: true,\r\n    // video: { facingMode: { exact: 'environment', width: 1280, height: 720 } },\r\n  }).then(res => {\r\n    return success(res, videoNode);\r\n  }).catch(error => {\r\n    console.error('访问用户媒体设备失败：', error.name, error.message);\r\n    // return Promise.reject();\r\n  });\r\n}\r\n/**\r\n * 获取元素实际的大小尺寸\r\n */\r\nconst getXYRatio = () => {\r\n  // videoHeight为video 真实高度\r\n  // offsetHeight为video css高度\r\n  const video = document.getElementById('video');\r\n  const { videoHeight: vh, videoWidth: vw, offsetHeight: oh, offsetWidth: ow } = video;\r\n\r\n  return {\r\n    yRatio: height => {\r\n      return (vh / oh) * height;\r\n    },\r\n    xRatio: width => {\r\n      return (vw / ow) * width;\r\n    },\r\n  };\r\n}\r\n/**\r\n * 裁切上传相关核心代码\r\n */\r\nconst photo = () => {\r\n  const video = document.getElementById('video');\r\n  const rectangle = document.getElementById('masking');\r\n  const _canvas = document.getElementById('canvas');\r\n  _canvas.style.display = 'block';\r\n\r\n\r\n  startCapture();\r\n  function startCapture() {\r\n    const { yRatio, xRatio } = getXYRatio();\r\n    /** 获取裁切框的位置 */\r\n    const { left, top, width, height } = rectangle.getBoundingClientRect();\r\n    console.log(left, top, width, height)\r\n\r\n    const context = _canvas.getContext('2d');\r\n    _canvas.width = width;\r\n    _canvas.height = height;\r\n\r\n    // void ctx.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\r\n    context.drawImage(\r\n        video,\r\n        xRatio(left + window.scrollX),\r\n        yRatio(top + window.scrollY),\r\n        xRatio(width),\r\n        yRatio(height),\r\n        0,\r\n        0,\r\n        width,\r\n        height,\r\n    );\r\n\r\n    // 获取当前截图的base64编码\r\n    const base64 = _canvas.toDataURL('image/jpeg');\r\n    let newImg = document.createElement('img')\r\n    newImg.src = base64\r\n    document.body.before(newImg)\r\n    // 这里可以再根据场景做base64压缩\r\n  }\r\n}\r\n/**\r\n * 复制功能\r\n */\r\nconst copy = () => {\r\n  // 动态创建 input 元素\r\n  const aux = document.createElement(\"input\");\r\n  // 获得需要复制的内容\r\n  aux.setAttribute(\"value\", window.location.href);\r\n  // 添加到 DOM 元素中\r\n  document.body.appendChild(aux);\r\n  // 执行选中\r\n  // 注意: 只有 input 和 textarea 可以执行 select() 方法.\r\n  aux.select();\r\n  // 执行复制命令\r\n  document.execCommand(\"copy\");\r\n  // 将 input 元素移除\r\n  document.body.removeChild(aux);\r\n  alert('复制成功')\r\n}\r\n\r\n\r\nonMounted(() => {\r\n  if (show.value) {\r\n    const video = document.getElementById('video')\r\n    getUserMediaStream(video)\r\n  }\r\n})\r\nonBeforeMount(() => {\r\n  (function(win, doc) {\r\n    let wid = null;\r\n    function changeFontSize() {\r\n      wid = doc.documentElement.clientWidth;\r\n      doc.documentElement.style.fontSize = wid / 19.2 + 'px'\r\n    }\r\n    changeFontSize()\r\n  })(window, document)\r\n})\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\nbody {\r\n  padding: 0;\r\n  margin: 0;\r\n  overflow: hidden;\r\n}\r\n#video-wrapper {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background: transparent;\r\n  opacity: 1;\r\n}\r\n#video {\r\n  object-fit: fill;\r\n}\r\n\r\n#masking {\r\n  position: absolute;\r\n  top: 6rem;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 16rem;\r\n  height: 10rem;\r\n  border: 2px solid #e6f7ff;\r\n  border-radius: 0.3rem;\r\n  z-index: 2;\r\n  background: transparent;\r\n  box-shadow: 0 0 0 50rem rgba(0, 0, 0, 0.7); // 外层阴影\r\n}\r\n\r\n#photo {\r\n  position: fixed;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  bottom: 2rem;\r\n  width: 3rem;\r\n  height: 3rem;\r\n  border: 5px solid #fff;\r\n  border-radius: 100%;\r\n  z-index: 108;\r\n}\r\n#photo div {\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 100%;\r\n  background: #fff;\r\n  opacity: 0.95;\r\n}\r\n#notSupport {\r\n  display: none;\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: 1000;\r\n  font-size: 1rem;\r\n  text-align: center;\r\n}\r\n\r\n#notSupport p:nth-child(1) {\r\n  text-align: center;\r\n  color: red;\r\n}\r\nbutton {\r\n  padding: 0.2rem;\r\n  font-size: 1rem;\r\n}\r\n</style>","import script from \"./photoComponent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./photoComponent.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./photoComponent.vue?vue&type=style&index=0&id=1c8068ed&lang=less&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1c8068ed\"]])\n\nexport default __exports__"],"names":["show","ref","ua","window","navigator","userAgent","toLowerCase","match","test","console","log","value","getUserMedia","constrains","mediaDevices","webkitGetUserMedia","mozGetUserMedia","Promise","resolve","inject","name","message","getUserMediaStream","videoNode","success","stream","video","srcObject","onloadedmetadata","play","audio","facingMode","exact","then","res","catch","error","getXYRatio","document","getElementById","videoHeight","vh","videoWidth","vw","offsetHeight","oh","offsetWidth","ow","yRatio","height","xRatio","width","photo","rectangle","_canvas","startCapture","left","top","getBoundingClientRect","context","getContext","drawImage","scrollX","scrollY","base64","toDataURL","newImg","createElement","src","body","before","style","display","copy","aux","setAttribute","location","href","appendChild","select","execCommand","removeChild","alert","onMounted","onBeforeMount","win","doc","wid","changeFontSize","documentElement","clientWidth","fontSize","__exports__"],"sourceRoot":""}